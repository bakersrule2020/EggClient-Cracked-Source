using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Photon;
using ExitGames.Client.Photon;

namespace EggClient.Movement
{
    internal class FunniExploit
    {
        public static void NiceMovementVRC(PhotonClient Client, byte[] VectorData, int ACTORID)
        {
            Vector3 newVec = BufferRW.ReadVector3(VectorData, 39);
            float x = newVec.X + Settings.PosX;
            float y = newVec.Y + Settings.RotY;
            float z = newVec.Z + Settings.PosZ;
            byte[] viewIDOut = BitConverter.GetBytes(int.Parse($"{ACTORID}00001"));
            byte[] ServerTime = BitConverter.GetBytes(Client.LoadBalancingPeer.ServerTimeInMilliSeconds);
            byte[] offsetData = BufferRW.Vector3ToBytes(new Vector3(x, y, z));
            Buffer.BlockCopy(viewIDOut, 0, Data, 0, 4);
            Buffer.BlockCopy(ServerTime, 0, Data, 4, 4);
            Buffer.BlockCopy(offset, 0, Data, 39, offsetData.Length);
            Buffer.BlockCopy(BitConverter.GetBytes(68), 0, Data, 68, 2);
            for (int i = 0; i < 2; i++)
            {
                Client.OpRaiseEvent(7, Data, new RaiseEventOptions()
                {
                    Receivers = ReceiverGroup.Others,
                    CachingOption = EventCaching.DoNotCache
                }, new SendOptions()
                {
                    Channel = 100,
                    DeliveryMode = DeliveryMode.UnreliableUnsequenced,
                    Encrypt = false,
                    Reliability = false
                });
            }
        }
    }
}
